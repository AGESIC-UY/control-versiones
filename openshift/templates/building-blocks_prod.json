{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "tprod",
    "annotations": {
      "openshift.io/display-name": "Building Blocks Production",
      "description": "Este template define todas las im치genes a utilizar en ambiente producci칩n en el proyecto BuildingBlocks, ver https://github.com/AGESIC-UY/control-versiones/blob/main/openshift/README.MD.",
      "tags": "quickstart,nodejs,hidden",
      "iconClass": "icon-nodejs",
      "openshift.io/long-description": "Este template define todas las im치genes a utilizar en ambiente producci칩n en el proyecto BuildingBlocks",
      "openshift.io/provider-display-name": "AGESIC",
      "openshift.io/documentation-url": "https://github.com/AGESIC-UY/control-versiones",
      "openshift.io/support-url": "https://github.com/AGESIC-UY/control-versiones",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/nodejs-ex/blob/master/README.md.",
  "labels": {
    "template": "buildingblocks",
    "app": "buildingblocks"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "stringData": {
        "database-user": "${DATABASE_USER}",
        "database-password": "${DATABASE_PASSWORD}",
        "database-admin-password" : "${DATABASE_ADMIN_PASSWORD}"
      }
    },    
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "api",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}frontend",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 3000,
            "targetPort": 3000
          }
        ],
        "selector": {
          "name": "${NAME}frontend"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}frontend"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}frontend"
        }
      }
    },    
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "nodejs-mongo-persistent"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "nodejs-mongo-persistent",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "DB_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "DB_PASS",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "DB_HOST",
                    "value": "${DB_HOST}"
                  },
                  {
                    "name": "DB_NAME",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "CLIENT_PORT",
                    "value": "80"
                  }, 
                  {
                    "name": "CLIENT_HOST",
                    "value": "${CLIENT_HOST}"
                  }, 
                  {
                    "name": "IP",
                    "value": "0.0.0.0"
                  }, 
                  {
                    "name": "HOST",
                    "value": "localhost"
                  },
                  {
                    "name": "PORT",
                    "value": "8080"
                  },                     
                  {
                    "name": "EMAIL_ADDRESS",
                    "value": "${EMAIL_ADDRESS}"
                  },  
                  {
                    "name": "EMAIL_PASS",
                    "value": "${EMAIL_PASS}"
                  },                        
                  {
                    "name": "SUPER_ADMIN_USERNAME",
                    "value": "${SUPER_ADMIN_USERNAME}"
                  },
                  {
                    "name": "SUPER_ADMIN_NAME",
                    "value": "${SUPER_ADMIN_NAME}"
                  },
                  {
                    "name": "SUPER_ADMIN_EMAIL",
                    "value": "${SUPER_ADMIN_EMAIL}"
                  },
                  {
                    "name": "SUPER_ADMIN_PASSWORD",
                    "value": "${SUPER_ADMIN_PASSWORD}"
                  },
                  {
                    "name": "SUPER_ADMIN_ROLE",
                    "value": "${SUPER_ADMIN_ROLE}"
                  },                                  
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-admin-password"
                      }
                    }
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "resources": {
                  "limits": {
                    "cpu":"1",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}frontend",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "1Gi"
          }          
        }, 
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "nodejs-mongodb-example"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}frontend:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}frontend"
        },
        "template": {
          "metadata": {
            "name": "${NAME}frontend",
            "labels": {
              "name": "${NAME}frontend"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "nodejs-mongodb-example",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 3000
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "MONGODB_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-admin-password"
                      }
                    }
                  },                 
                  {
                    "name": "REACT_APP_HOST",
                    "value": "${REACT_APP_HOST}"
                  },
                  {
                    "name": "REACT_APP_PORT",
                    "value": "80"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 3000
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/",
                    "port": 3000
                  }
                },
                "resources": {
                  "limits": {
                    "cpu":"1",
                    "memory": "1Gi"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "mongodb",
            "port": 27017,
            "targetPort": 27017
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "mongodb"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${NAMESPACE}",
                "name": "mongodb:${MONGODB_VERSION}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mongodb",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 27017
                  }
                ],
                "env": [
                  {
                    "name": "MONGODB_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-admin-password"
                      }
                    }
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 3,
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-i",
                      "-c",
                      "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                    ]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 27017
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_MONGODB_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/mongodb/data"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}"
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "buildingblocks"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "NODEJS_VERSION",
      "displayName": "Version of NodeJS Image",
      "description": "Version of NodeJS image to be used (10, 12, or latest).",
      "value": "10",
      "required": true
    },
    {
      "name": "MONGODB_VERSION",
      "displayName": "Version of MongoDB Image",
      "description": "Version of MongoDB image to be used (3.6 or latest).",
      "value": "3.6",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the Node.js container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "MEMORY_MONGODB_LIMIT",
      "displayName": "Memory Limit (MongoDB)",
      "description": "Maximum amount of memory the MongoDB container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/AGESIC-UY/control-versiones.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository.",
      "value": "server"
    },
    {
      "name": "CONTEXT_DIR_FRONTEND",
      "displayName": "Context Directory Frontend",
      "description": "Set this to the relative path to your project if it is not in the root of your repository.",
      "value": "client"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "displayName": "Generic Webhook Secret",
      "description": "A secret string used to configure the Generic webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "mongodb"
    },    
    {
      "name": "DATABASE_USER",
      "displayName": "MongoDB Username",
      "description": "Username for MongoDB user that will be used for accessing the database.",      
      "value": "agesic"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MongoDB Password",
      "description": "Password for the MongoDB user.",      
      "value": "agesic-control-versiones"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "buildingBlocks"
    },
    {
      "name": "DB_HOST",
      "displayName": "Database Host",
      "required": true,
      "value": "mongodb"
    },
    {
      "name": "DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Administrator Password",
      "description": "Password for the database admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "NPM_MIRROR",
      "displayName": "Custom NPM Mirror URL",
      "description": "The custom NPM mirror URL",
      "value": ""
    },        
    {
      "name": "CLIENT_HOST",
      "displayName": "Frontend HOST URL",
      "description": "Frontend HOST URL. <app name frontend>.<project>.<domain>",
      "value": "buildingblocksfrontend-prod.te-apps.paas.red.uy"
    },                 
    {
      "name": "EMAIL_ADDRESS",
      "displayName": "Email to send",
      "description": "email to send.",
      "value": "controlversiones_confirmacionregistro@mtaagesic.gub.uy"
    },  
    {
      "name": "EMAIL_PASS",
      "displayName": "Password to send",
      "description": "password to send.",
      "value": ""
    },
    {
      "name": "REACT_APP_HOST",
      "displayName": "Api url",
      "description": "frontend variable used to access api url. <app name backend>.<project>.<domain>",
      "value": "buildingblocks-prod.te-apps.paas.red.uy"
    },
    {
      "name": "SUPER_ADMIN_USERNAME",
      "displayName": "Super admin username ",
      "description": "super admin username, used to create the initial user ",
      "value": "superAdmin"
    },
    {
      "name": "SUPER_ADMIN_NAME",
      "displayName": "Super admin name",
      "description": "super admin name, used to create the initial user ",
      "value": "Agesic"
    },
    {
      "name": "SUPER_ADMIN_EMAIL",
      "displayName": "Super admin email",
      "description": "super admin email, used to create the initial user ",
      "value": "superadmin@gub.uy"
    },
    {
      "name": "SUPER_ADMIN_PASSWORD",
      "displayName": "Super admin password",
      "description": "super admin password, used to create the initial user ",
      "value": "Agesic.123"
    },
    {
      "name": "SUPER_ADMIN_ROLE",
      "displayName": "Super admin role",
      "description": "super admin role, used to create the initial user ",
      "value": "superAdmin"
    }
  ]
}


